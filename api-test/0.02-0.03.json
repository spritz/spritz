[
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class spritz.ConnectableStream<T extends java.lang.Object>",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.ConnectableStream",
      "classSimpleName": "ConnectableStream",
      "elementKind": "class",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.MetaDataSource'.",
    "element": "class spritz.Spritz",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.MetaDataSource",
      "annotationType": "spritz.internal.annotations.MetaDataSource",
      "classQualifiedName": "spritz.Spritz",
      "classSimpleName": "Spritz",
      "elementKind": "class",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.GwtIncompatible'.",
    "element": "class spritz.SpritzTestUtil",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.GwtIncompatible",
      "annotationType": "spritz.internal.annotations.GwtIncompatible",
      "classQualifiedName": "spritz.SpritzTestUtil",
      "classSimpleName": "SpritzTestUtil",
      "elementKind": "class",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.MetaDataSource'.",
    "element": "class spritz.Stream<T extends java.lang.Object>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.MetaDataSource",
      "annotationType": "spritz.internal.annotations.MetaDataSource",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "class",
      "package": "spritz"
    }
  },
  {
    "code": "java.class.noLongerImplementsInterface",
    "description": "Class no longer implements interface 'spritz.Publisher<T extends java.lang.Object>'.",
    "element": "class spritz.Stream<T extends java.lang.Object>",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "class",
      "interface": "spritz.Publisher<T extends java.lang.Object>",
      "package": "spritz"
    }
  },
  {
    "code": "java.class.kindChanged",
    "description": "Class kind changed from 'interface' to 'class'.",
    "newElement": "class spritz.Subject<T extends java.lang.Object>",
    "oldElement": "interface spritz.Subject<T extends java.lang.Object>",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "interface",
      "newKind": "class",
      "oldKind": "interface",
      "package": "spritz"
    }
  },
  {
    "code": "java.class.noLongerAbstract",
    "description": "Class is no longer abstract.",
    "newElement": "class spritz.Subject<T extends java.lang.Object>",
    "oldElement": "interface spritz.Subject<T extends java.lang.Object>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "interface",
      "newModifiers": "public",
      "oldModifiers": "public abstract",
      "package": "spritz"
    }
  },
  {
    "code": "java.class.noLongerImplementsInterface",
    "description": "Class no longer implements interface 'spritz.Publisher<T extends java.lang.Object>'.",
    "newElement": "class spritz.Subject<T extends java.lang.Object>",
    "oldElement": "interface spritz.Subject<T extends java.lang.Object>",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "interface",
      "interface": "spritz.Publisher<T extends java.lang.Object>",
      "package": "spritz"
    }
  },
  {
    "code": "java.class.nonFinalClassInheritsFromNewClass",
    "description": "Non-final class now inherits from 'spritz.Stream<T extends java.lang.Object>'.",
    "newElement": "class spritz.Subject<T extends java.lang.Object>",
    "oldElement": "interface spritz.Subject<T extends java.lang.Object>",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "interface",
      "package": "spritz",
      "superClass": "spritz.Stream<T extends java.lang.Object>"
    }
  },
  {
    "code": "java.class.noLongerImplementsInterface",
    "description": "Class no longer implements interface 'spritz.Cancelable'.",
    "element": "interface spritz.Subscription",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subscription",
      "classSimpleName": "Subscription",
      "elementKind": "interface",
      "interface": "spritz.Cancelable",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <DownstreamT extends T extends java.lang.Object> spritz.Stream<DownstreamT> spritz.Stream<T>::ofType(java.lang.Class<DownstreamT>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.TRANSFORMATION, spritz.internal.annotations.DocCategory.Type.FILTERING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "ofType",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.GwtIncompatible'.",
    "element": "method <DownstreamT extends T extends java.lang.Object> spritz.Stream<DownstreamT> spritz.Stream<T>::ofType(java.lang.Class<DownstreamT>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.GwtIncompatible",
      "annotationType": "spritz.internal.annotations.GwtIncompatible",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "ofType",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <DownstreamT extends T extends java.lang.Object> spritz.Stream<DownstreamT> spritz.Stream<T>::ofType(java.lang.String, java.lang.Class<DownstreamT>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.TRANSFORMATION, spritz.internal.annotations.DocCategory.Type.FILTERING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "ofType",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.GwtIncompatible'.",
    "element": "method <DownstreamT extends T extends java.lang.Object> spritz.Stream<DownstreamT> spritz.Stream<T>::ofType(java.lang.String, java.lang.Class<DownstreamT>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.GwtIncompatible",
      "annotationType": "spritz.internal.annotations.GwtIncompatible",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "ofType",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <DownstreamT> spritz.Stream<DownstreamT> spritz.Stream<T>::concatMap(java.util.function.Function<T, spritz.Stream<DownstreamT>>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.TRANSFORMATION, spritz.internal.annotations.DocCategory.Type.MERGING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "concatMap",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <DownstreamT> spritz.Stream<DownstreamT> spritz.Stream<T>::exhaustMap(java.util.function.Function<T, spritz.Stream<DownstreamT>>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.TRANSFORMATION, spritz.internal.annotations.DocCategory.Type.MERGING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "exhaustMap",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <DownstreamT> spritz.Stream<DownstreamT> spritz.Stream<T>::map(java.lang.String, java.util.function.Function<T, DownstreamT>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.TRANSFORMATION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "map",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <DownstreamT> spritz.Stream<DownstreamT> spritz.Stream<T>::map(java.util.function.Function<T, DownstreamT>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.TRANSFORMATION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "map",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <DownstreamT> spritz.Stream<DownstreamT> spritz.Stream<T>::mapTo(DownstreamT)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.TRANSFORMATION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "mapTo",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <DownstreamT> spritz.Stream<DownstreamT> spritz.Stream<T>::mapTo(java.lang.String, DownstreamT)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.TRANSFORMATION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "mapTo",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <DownstreamT> spritz.Stream<DownstreamT> spritz.Stream<T>::mergeMap(java.util.function.Function<T, spritz.Stream<DownstreamT>>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.TRANSFORMATION, spritz.internal.annotations.DocCategory.Type.MERGING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "mergeMap",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <DownstreamT> spritz.Stream<DownstreamT> spritz.Stream<T>::mergeMap(java.util.function.Function<T, spritz.Stream<DownstreamT>>, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.TRANSFORMATION, spritz.internal.annotations.DocCategory.Type.MERGING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "mergeMap",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <DownstreamT> spritz.Stream<DownstreamT> spritz.Stream<T>::scan(java.lang.String, spritz.AccumulatorFunction<T, DownstreamT>, DownstreamT)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.ACCUMULATING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "scan",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <DownstreamT> spritz.Stream<DownstreamT> spritz.Stream<T>::scan(spritz.AccumulatorFunction<T, DownstreamT>, DownstreamT)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.ACCUMULATING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "scan",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <DownstreamT> spritz.Stream<DownstreamT> spritz.Stream<T>::switchMap(java.util.function.Function<T, spritz.Stream<DownstreamT>>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.TRANSFORMATION, spritz.internal.annotations.DocCategory.Type.MERGING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "switchMap",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::concat(spritz.Stream<T>[])",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "concat",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::create(java.lang.String, spritz.SourceCreator<T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "create",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::create(spritz.SourceCreator<T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "create",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::empty()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "empty",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::empty(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "empty",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::fail(java.lang.String, java.lang.Throwable)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "fail",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::fail(java.lang.Throwable)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "fail",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::fromCallable(java.lang.String, java.util.concurrent.Callable<T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "fromCallable",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::fromCallable(java.util.concurrent.Callable<T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "fromCallable",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::fromCollection(java.lang.String, java.util.Collection<T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "fromCollection",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::fromCollection(java.util.Collection<T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "fromCollection",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::fromRunnable(java.lang.Runnable)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "fromRunnable",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::fromRunnable(java.lang.String, java.lang.Runnable)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "fromRunnable",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::fromStream(java.util.stream.Stream<T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "fromStream",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::fromSupplier(java.lang.String, java.util.function.Supplier<T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "fromSupplier",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::fromSupplier(java.util.function.Supplier<T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "fromSupplier",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::generate(java.lang.String, java.util.function.Supplier<T>, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "generate",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::generate(java.util.function.Supplier<T>, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "generate",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::merge(spritz.Stream<T>[])",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "merge",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::never()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "never",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::never(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "never",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::of(T[])",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "of",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::of(java.lang.String, T[])",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "of",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method <T> spritz.Stream<T> spritz.Stream<T>::ofNullable(T)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "ofNullable",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method <T> spritz.Subject<T> spritz.Stream<T>::currentValueSubject(T)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "currentValueSubject",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method <T> spritz.Subject<T> spritz.Stream<T>::currentValueSubject(java.lang.String, T)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "currentValueSubject",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method <T> spritz.Subject<T> spritz.Stream<T>::replaySubject()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "replaySubject",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method <T> spritz.Subject<T> spritz.Stream<T>::replaySubject(int, int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "replaySubject",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method <T> spritz.Subject<T> spritz.Stream<T>::replaySubject(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "replaySubject",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method <T> spritz.Subject<T> spritz.Stream<T>::replaySubject(java.lang.String, int, int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "replaySubject",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method <T> spritz.Subject<T> spritz.Stream<T>::replaySubjectWithMaxAge(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "replaySubjectWithMaxAge",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method <T> spritz.Subject<T> spritz.Stream<T>::replaySubjectWithMaxAge(java.lang.String, int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "replaySubjectWithMaxAge",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method <T> spritz.Subject<T> spritz.Stream<T>::replaySubjectWithMaxSize(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "replaySubjectWithMaxSize",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method <T> spritz.Subject<T> spritz.Stream<T>::replaySubjectWithMaxSize(java.lang.String, int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "replaySubjectWithMaxSize",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method <T> spritz.Subject<T> spritz.Stream<T>::subject()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "subject",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method <T> spritz.Subject<T> spritz.Stream<T>::subject(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "subject",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method boolean java.lang.Object::equals(java.lang.Object) @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "equals",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method boolean spritz.EventEmitter<T>::isDone()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.EventEmitter",
      "classSimpleName": "EventEmitter",
      "elementKind": "method",
      "methodName": "isDone",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method boolean spritz.Subject<T>::isDone()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "isDone",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method int java.lang.Object::hashCode() @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "hashCode",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method java.lang.Class<?> java.lang.Object::getClass() @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "getClass",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method java.lang.Object java.lang.Object::clone() throws java.lang.CloneNotSupportedException @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "clone",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method java.lang.String java.lang.Object::toString() @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "toString",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "newElement": "method spritz.ConnectableStream<T> spritz.Stream<T>::publish()",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::publish()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.UNKNOWN})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "publish",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'spritz.Stream<T extends java.lang.Object>' to 'spritz.ConnectableStream<T extends java.lang.Object>'.",
    "newElement": "method spritz.ConnectableStream<T> spritz.Stream<T>::publish()",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::publish()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "publish",
      "newType": "spritz.ConnectableStream<T extends java.lang.Object>",
      "oldType": "spritz.Stream<T extends java.lang.Object>",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "newElement": "method spritz.ConnectableStream<T> spritz.Stream<T>::publish(java.lang.String)",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::publish(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.UNKNOWN})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "publish",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'spritz.Stream<T extends java.lang.Object>' to 'spritz.ConnectableStream<T extends java.lang.Object>'.",
    "newElement": "method spritz.ConnectableStream<T> spritz.Stream<T>::publish(java.lang.String)",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::publish(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "publish",
      "newType": "spritz.ConnectableStream<T extends java.lang.Object>",
      "oldType": "spritz.Stream<T extends java.lang.Object>",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.ConnectableStream<T> spritz.Stream<T>::publishCurrentValue(T)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "publishCurrentValue",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.ConnectableStream<T> spritz.Stream<T>::publishCurrentValue(java.lang.String, T)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "publishCurrentValue",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.ConnectableStream<T> spritz.Stream<T>::publishReplay()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "publishReplay",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.ConnectableStream<T> spritz.Stream<T>::publishReplay(int, int)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "publishReplay",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.ConnectableStream<T> spritz.Stream<T>::publishReplay(java.lang.String, int, int)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "publishReplay",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.ConnectableStream<T> spritz.Stream<T>::publishReplayWithMaxAge(int)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "publishReplayWithMaxAge",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.ConnectableStream<T> spritz.Stream<T>::publishReplayWithMaxSize(int)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "publishReplayWithMaxSize",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::afterCancel(java.lang.Runnable)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.PEEKING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "afterCancel",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::afterCancel(java.lang.String, java.lang.Runnable)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.PEEKING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "afterCancel",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::afterComplete(java.lang.Runnable)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.PEEKING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "afterComplete",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::afterComplete(java.lang.String, java.lang.Runnable)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.PEEKING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "afterComplete",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::afterError(java.lang.String, java.util.function.Consumer<java.lang.Throwable>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.PEEKING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "afterError",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::afterError(java.util.function.Consumer<java.lang.Throwable>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.PEEKING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "afterError",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::afterNext(java.lang.String, java.util.function.Consumer<? super T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.PEEKING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "afterNext",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::afterNext(java.util.function.Consumer<? super T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.PEEKING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "afterNext",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::afterSubscribe(java.lang.String, java.util.function.Consumer<spritz.Subscription>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.PEEKING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "afterSubscribe",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::afterSubscribe(java.util.function.Consumer<spritz.Subscription>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.PEEKING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "afterSubscribe",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::afterTerminate(java.lang.Runnable)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.PEEKING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "afterTerminate",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::afterTerminate(java.lang.String, java.lang.Runnable)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.PEEKING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "afterTerminate",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::append(spritz.Stream<T>[])",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.MERGING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "append",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::debounce(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.RATE_LIMITING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "debounce",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::debounce(java.lang.String, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.RATE_LIMITING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "debounce",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::debounce(java.lang.String, spritz.TimeoutForItemFn<T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.RATE_LIMITING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "debounce",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::debounce(spritz.TimeoutForItemFn<T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.RATE_LIMITING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "debounce",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::defaultIfEmpty(T)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.UNKNOWN})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "defaultIfEmpty",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::defaultIfEmpty(java.lang.String, T)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.UNKNOWN})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "defaultIfEmpty",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::distinct()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.FILTERING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "distinct",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::distinct(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.FILTERING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "distinct",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::endWith(T)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.MERGING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "endWith",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::errorIfEmpty(java.lang.String, java.util.function.Supplier<java.lang.Throwable>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.UNKNOWN})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "errorIfEmpty",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::errorIfEmpty(java.util.function.Supplier<java.lang.Throwable>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.UNKNOWN})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "errorIfEmpty",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::filter(java.lang.String, java.util.function.Predicate<? super T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.FILTERING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "filter",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::filter(java.util.function.Predicate<? super T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.FILTERING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "filter",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::filterSuccessive(java.lang.String, spritz.SuccessivePredicate<T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.FILTERING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "filterSuccessive",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::filterSuccessive(spritz.SuccessivePredicate<T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.FILTERING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "filterSuccessive",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::first()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "first",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::firstOrDefault(T)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "firstOrDefault",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::firstOrError()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "firstOrError",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::ignoreElements()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.FILTERING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "ignoreElements",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::ignoreElements(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.FILTERING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "ignoreElements",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::last()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "last",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::last(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "last",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::last(java.lang.String, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "last",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::lastOrDefault(T)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "lastOrDefault",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::lastOrError()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "lastOrError",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::limit(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "limit",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::limit(java.lang.String, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "limit",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.Stream<T> spritz.Stream<T>::mergeWith(spritz.Stream<T>[])",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "mergeWith",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::observeOn(java.lang.String, spritz.VirtualProcessorUnit)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SCHEDULING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "observeOn",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::observeOn(spritz.VirtualProcessorUnit)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SCHEDULING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "observeOn",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::peek(java.lang.String, java.util.function.Consumer<? super T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.PEEKING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "peek",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::peek(java.util.function.Consumer<? super T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.PEEKING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "peek",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.Stream<T> spritz.Stream<T>::peekCancel(java.lang.Runnable)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "peekCancel",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.Stream<T> spritz.Stream<T>::peekCancel(java.lang.String, java.lang.Runnable)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "peekCancel",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.Stream<T> spritz.Stream<T>::peekComplete(java.lang.Runnable)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "peekComplete",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.Stream<T> spritz.Stream<T>::peekComplete(java.lang.String, java.lang.Runnable)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "peekComplete",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.Stream<T> spritz.Stream<T>::peekError(java.lang.String, java.util.function.Consumer<java.lang.Throwable>)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "peekError",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.Stream<T> spritz.Stream<T>::peekError(java.util.function.Consumer<java.lang.Throwable>)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "peekError",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.Stream<T> spritz.Stream<T>::peekSubscribe(java.lang.String, java.util.function.Consumer<spritz.Subscription>)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "peekSubscribe",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.Stream<T> spritz.Stream<T>::peekSubscribe(java.util.function.Consumer<spritz.Subscription>)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "peekSubscribe",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.Stream<T> spritz.Stream<T>::peekTerminate(java.lang.Runnable)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "peekTerminate",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.Stream<T> spritz.Stream<T>::peekTerminate(java.lang.String, java.lang.Runnable)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "peekTerminate",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::prepend(spritz.Stream<T>[])",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.MERGING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "prepend",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::repeat()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.ERROR_HANDLING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "repeat",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::repeat(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.ERROR_HANDLING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "repeat",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::repeat(java.lang.String, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.ERROR_HANDLING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "repeat",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.Stream<T> spritz.Stream<T>::rescue(java.lang.String, java.util.function.Function<java.lang.Throwable, spritz.Stream<T>>)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "rescue",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.Stream<T> spritz.Stream<T>::rescue(java.util.function.Function<java.lang.Throwable, spritz.Stream<T>>)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "rescue",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.Stream<T> spritz.Stream<T>::rescueThenReturn(T)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "rescueThenReturn",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.Stream<T> spritz.Stream<T>::rescueThenReturn(java.lang.String, T)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "rescueThenReturn",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::sample(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.RATE_LIMITING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "sample",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::sample(int, boolean)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.RATE_LIMITING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "sample",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::sample(java.lang.String, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.RATE_LIMITING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "sample",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::sample(java.lang.String, int, boolean)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.RATE_LIMITING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "sample",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.Stream<T> spritz.Stream<T>::share()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "share",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method spritz.Stream<T> spritz.Stream<T>::share(java.lang.String)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "share",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::skip(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "skip",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::skip(java.lang.String, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "skip",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::skipRepeats()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.FILTERING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "skipRepeats",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::skipRepeats(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.FILTERING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "skipRepeats",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::skipUntil(java.lang.String, java.util.function.Predicate<? super T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "skipUntil",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::skipUntil(java.util.function.Predicate<? super T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "skipUntil",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::skipWhile(java.lang.String, java.util.function.Predicate<? super T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "skipWhile",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::skipWhile(java.util.function.Predicate<? super T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "skipWhile",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::startWith(T)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.MERGING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "startWith",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::subscribeOn(java.lang.String, spritz.VirtualProcessorUnit)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SCHEDULING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "subscribeOn",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::subscribeOn(spritz.VirtualProcessorUnit)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SCHEDULING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "subscribeOn",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::take(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "take",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::takeLast(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "takeLast",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::takeUntil(java.lang.String, java.util.function.Predicate<? super T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "takeUntil",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::takeUntil(java.util.function.Predicate<? super T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "takeUntil",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::takeWhile(java.lang.String, java.util.function.Predicate<? super T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "takeWhile",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::takeWhile(java.util.function.Predicate<? super T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.SLICING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "takeWhile",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::throttle(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.RATE_LIMITING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "throttle",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::throttle(java.lang.String, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.RATE_LIMITING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "throttle",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::throttle(java.lang.String, spritz.TimeoutForItemFn<T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.RATE_LIMITING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "throttle",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::throttle(spritz.TimeoutForItemFn<T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.RATE_LIMITING})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "throttle",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::timeout(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.UNKNOWN})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "timeout",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<T> spritz.Stream<T>::timeout(java.lang.String, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.UNKNOWN})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "timeout",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<java.lang.Integer> spritz.Stream<T>::periodic(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "periodic",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<java.lang.Integer> spritz.Stream<T>::periodic(java.lang.String, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "periodic",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<java.lang.Integer> spritz.Stream<T>::range(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "range",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method spritz.Stream<java.lang.Integer> spritz.Stream<T>::range(java.lang.String, int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.CONSTRUCTION})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "range",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void java.lang.Object::finalize() throws java.lang.Throwable @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "finalize",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method void java.lang.Object::notify() @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "notify",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method void java.lang.Object::notifyAll() @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "notifyAll",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method void java.lang.Object::wait() throws java.lang.InterruptedException @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "wait",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method void java.lang.Object::wait(long) throws java.lang.InterruptedException @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "wait",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method void java.lang.Object::wait(long, int) throws java.lang.InterruptedException @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "wait",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.visibilityReduced",
    "description": "visibility reduced",
    "element": "method void spritz.Stream<T>::<init>(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "constructor",
      "methodName": "<init>",
      "newVisibility": "package",
      "oldVisibility": "protected",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.visibilityReduced",
    "description": "visibility reduced",
    "element": "method void spritz.Stream<T>::doSubscribe(spritz.Subscriber<? super T>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "doSubscribe",
      "newVisibility": "package",
      "oldVisibility": "protected",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method void spritz.Stream<T>::forEach(java.util.function.Consumer<T>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.UNKNOWN})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "forEach",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'spritz.internal.annotations.DocCategory'.",
    "element": "method void spritz.Stream<T>::terminate(java.util.function.Supplier<spritz.Subscriber<T>>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@spritz.internal.annotations.DocCategory({spritz.internal.annotations.DocCategory.Type.UNKNOWN})",
      "annotationType": "spritz.internal.annotations.DocCategory",
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "terminate",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.inheritedMovedToClass",
    "description": "The method was previously declared in superclass 'spritz.EventEmitter<T extends java.lang.Object>' but is now declared in class 'spritz.Subject<T extends java.lang.Object>'.",
    "newElement": "method void spritz.Subject<T>::complete()",
    "oldElement": "method void spritz.EventEmitter<T>::complete() @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "complete",
      "newClass": "spritz.Subject<T extends java.lang.Object>",
      "oldClass": "spritz.EventEmitter<T extends java.lang.Object>",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.noLongerAbstract",
    "description": "Method no longer abstract",
    "newElement": "method void spritz.Subject<T>::complete()",
    "oldElement": "method void spritz.EventEmitter<T>::complete() @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "complete",
      "newModifiers": "public final",
      "oldModifiers": "public abstract",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.nowFinal",
    "description": "Method is now final.",
    "newElement": "method void spritz.Subject<T>::complete()",
    "oldElement": "method void spritz.EventEmitter<T>::complete() @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "complete",
      "newModifiers": "public final",
      "oldModifiers": "public abstract",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.inheritedMovedToClass",
    "description": "The method was previously declared in superclass 'spritz.EventEmitter<T extends java.lang.Object>' but is now declared in class 'spritz.Subject<T extends java.lang.Object>'.",
    "newElement": "method void spritz.Subject<T>::error(java.lang.Throwable)",
    "oldElement": "method void spritz.EventEmitter<T>::error(java.lang.Throwable) @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "error",
      "newClass": "spritz.Subject<T extends java.lang.Object>",
      "oldClass": "spritz.EventEmitter<T extends java.lang.Object>",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.noLongerAbstract",
    "description": "Method no longer abstract",
    "newElement": "method void spritz.Subject<T>::error(java.lang.Throwable)",
    "oldElement": "method void spritz.EventEmitter<T>::error(java.lang.Throwable) @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "error",
      "newModifiers": "public final",
      "oldModifiers": "public abstract",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.nowFinal",
    "description": "Method is now final.",
    "newElement": "method void spritz.Subject<T>::error(java.lang.Throwable)",
    "oldElement": "method void spritz.EventEmitter<T>::error(java.lang.Throwable) @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "error",
      "newModifiers": "public final",
      "oldModifiers": "public abstract",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.inheritedMovedToClass",
    "description": "The method was previously declared in superclass 'spritz.EventEmitter<T extends java.lang.Object>' but is now declared in class 'spritz.Subject<T extends java.lang.Object>'.",
    "newElement": "method void spritz.Subject<T>::next(T)",
    "oldElement": "method void spritz.EventEmitter<T>::next(T) @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "next",
      "newClass": "spritz.Subject<T extends java.lang.Object>",
      "oldClass": "spritz.EventEmitter<T extends java.lang.Object>",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.noLongerAbstract",
    "description": "Method no longer abstract",
    "newElement": "method void spritz.Subject<T>::next(T)",
    "oldElement": "method void spritz.EventEmitter<T>::next(T) @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "next",
      "newModifiers": "public final",
      "oldModifiers": "public abstract",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.nowFinal",
    "description": "Method is now final.",
    "newElement": "method void spritz.Subject<T>::next(T)",
    "oldElement": "method void spritz.EventEmitter<T>::next(T) @ spritz.Subject<T>",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Subject",
      "classSimpleName": "Subject",
      "elementKind": "method",
      "methodName": "next",
      "newModifiers": "public final",
      "oldModifiers": "public abstract",
      "package": "spritz"
    }
  },
  {
    "code": "java.annotation.noLongerPresent",
    "description": "Old API referenced the annotation type but the new API version no longer does.",
    "oldElement": "@interface spritz.internal.annotations.DocCategory",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.internal.annotations.DocCategory",
      "classSimpleName": "DocCategory",
      "elementKind": "@interface",
      "package": "spritz.internal.annotations"
    }
  },
  {
    "code": "java.annotation.noLongerPresent",
    "description": "Old API referenced the annotation type but the new API version no longer does.",
    "oldElement": "@interface spritz.internal.annotations.GwtIncompatible",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.internal.annotations.GwtIncompatible",
      "classSimpleName": "GwtIncompatible",
      "elementKind": "@interface",
      "package": "spritz.internal.annotations"
    }
  },
  {
    "code": "java.annotation.noLongerPresent",
    "description": "Old API referenced the annotation type but the new API version no longer does.",
    "oldElement": "@interface spritz.internal.annotations.MetaDataSource",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.internal.annotations.MetaDataSource",
      "classSimpleName": "MetaDataSource",
      "elementKind": "@interface",
      "package": "spritz.internal.annotations"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "class spritz.MulticastSubject<T extends java.lang.Object>",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.MulticastSubject",
      "classSimpleName": "MulticastSubject",
      "elementKind": "class",
      "package": "spritz"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "class spritz.internal.util.CircularBuffer<T extends java.lang.Object>",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.internal.util.CircularBuffer",
      "classSimpleName": "CircularBuffer",
      "elementKind": "class",
      "package": "spritz.internal.util"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "interface spritz.Publisher<T extends java.lang.Object>",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Publisher",
      "classSimpleName": "Publisher",
      "elementKind": "interface",
      "package": "spritz"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "interface spritz.SourceCreator.Observer<T extends java.lang.Object>",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.SourceCreator.Observer",
      "classSimpleName": "Observer",
      "elementKind": "interface",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::onCancel(java.lang.Runnable)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "onCancel",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::onCancel(java.lang.String, java.lang.Runnable)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "onCancel",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::onComplete(java.lang.Runnable)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "onComplete",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::onComplete(java.lang.String, java.lang.Runnable)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "onComplete",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::onError(java.lang.String, java.util.function.Consumer<java.lang.Throwable>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "onError",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::onError(java.util.function.Consumer<java.lang.Throwable>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "onError",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::onErrorResumeWith(java.lang.String, java.util.function.Function<java.lang.Throwable, spritz.Stream<T>>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "onErrorResumeWith",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::onErrorResumeWith(java.util.function.Function<java.lang.Throwable, spritz.Stream<T>>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "onErrorResumeWith",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::onErrorReturn(T)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "onErrorReturn",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::onErrorReturn(java.lang.String, T)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "onErrorReturn",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::onNext(java.lang.String, java.util.function.Consumer<? super T>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "onNext",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::onNext(java.util.function.Consumer<? super T>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "onNext",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::onSubscribe(java.lang.String, java.util.function.Consumer<spritz.Subscription>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "onSubscribe",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::onSubscribe(java.util.function.Consumer<spritz.Subscription>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "onSubscribe",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::onTerminate(java.lang.Runnable)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "onTerminate",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::onTerminate(java.lang.String, java.lang.Runnable)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "onTerminate",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::tap(java.lang.String, java.util.function.Consumer<? super T>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "tap",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method spritz.Stream<T> spritz.Stream<T>::tap(java.util.function.Consumer<? super T>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.Stream",
      "classSimpleName": "Stream",
      "elementKind": "method",
      "methodName": "tap",
      "package": "spritz"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'spritz.SourceCreator.Observer<T extends java.lang.Object>' to 'spritz.EventEmitter<T extends java.lang.Object>'.",
    "newElement": "parameter void spritz.SourceCreator<T>::create(===spritz.EventEmitter<T>===)",
    "oldElement": "parameter void spritz.SourceCreator<T>::create(===spritz.SourceCreator.Observer<T>===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "spritz.SourceCreator",
      "classSimpleName": "SourceCreator",
      "elementKind": "parameter",
      "methodName": "create",
      "newType": "spritz.EventEmitter<T extends java.lang.Object>",
      "oldType": "spritz.SourceCreator.Observer<T extends java.lang.Object>",
      "package": "spritz",
      "parameterIndex": "0"
    }
  }
]
